.TH "ResourceManager" 3 "Aguados Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ResourceManager \- This class manages the loading and access of various resources for the engine\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <resource_manager\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBResourceManager\fP ()"
.br
.ti -1c
.RI "\fB~ResourceManager\fP ()"
.br
.ti -1c
.RI "void \fBWaitResources\fP ()"
.br
.ti -1c
.RI "void \fBLoadObj\fP (\fBEngine\fP &e, const char *name, const char *path)"
.br
.ti -1c
.RI "\fBGeometry\fP * \fBgetGeometry\fP (std::string nameID)"
.br
.ti -1c
.RI "void \fBloadTexture\fP (const char *name, \fBTexture\fP tex, const char *path)"
.br
.ti -1c
.RI "unsigned \fBgetTexture\fP (const char *name)"
.br
.ti -1c
.RI "bool \fBcreateVertexBuffer\fP (std::string nameID, float *vertices, unsigned size)"
.br
.ti -1c
.RI "\fBVertexBuffer\fP * \fBgetVertexBuffer\fP (std::string nameID)"
.br
.ti -1c
.RI "bool \fBcreateIndexBuffer\fP (std::string nameID, unsigned *indices, unsigned size)"
.br
.ti -1c
.RI "\fBIndexBuffer\fP * \fBgetIndexBuffer\fP (std::string nameID)"
.br
.ti -1c
.RI "bool \fBcreateBuffersWithGeometry\fP (\fBGeometry\fP *geo, std::string nameIDVertex, std::string nameIDIndex)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class manages the loading and access of various resources for the engine\&. 

The \fBResourceManager\fP class provides a central system for loading textures, geometries, vertex buffers, and index buffers\&. It allows asynchronous loading, waiting for resources to be ready, and retrieval of resources by name\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ResourceManager::ResourceManager ()"
Constructor for the \fBResourceManager\fP class\&. 
.SS "ResourceManager::~ResourceManager ()"
Destructor for the \fBResourceManager\fP class\&.
.PP
Releases resources and cleans up internal data\&. 
.SH "Member Function Documentation"
.PP 
.SS "bool ResourceManager::createBuffersWithGeometry (\fBGeometry\fP * geo, std::string nameIDVertex, std::string nameIDIndex)"
Creates vertex and index buffers from a loaded \fBGeometry\fP object\&.
.PP
This function creates vertex and index buffers from the data stored in a \fBGeometry\fP object\&. It assigns the provided names to the created buffers\&.
.PP
\fBParameters\fP
.RS 4
\fIgeo\fP A pointer to the \fBGeometry\fP object containing the data\&. 
.br
\fInameIDVertex\fP The name to associate with the vertex buffer\&. 
.br
\fInameIDIndex\fP The name to associate with the index buffer\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if both buffers were created successfully, false otherwise\&. 
.RE
.PP

.SS "bool ResourceManager::createIndexBuffer (std::string nameID, unsigned * indices, unsigned size)"
Creates an index buffer with the given data\&.
.PP
\fBParameters\fP
.RS 4
\fInameID\fP The name to associate with the index buffer\&. 
.br
\fIindices\fP A pointer to the index data\&. 
.br
\fIsize\fP The size of the index data in bytes\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if the index buffer was created successfully, false otherwise\&. 
.RE
.PP

.SS "bool ResourceManager::createVertexBuffer (std::string nameID, float * vertices, unsigned size)"
Creates a vertex buffer with the given data\&.
.PP
\fBParameters\fP
.RS 4
\fInameID\fP The name to associate with the vertex buffer\&. 
.br
\fIvertices\fP A pointer to the vertex data\&. 
.br
\fIsize\fP The size of the vertex data in bytes\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if the vertex buffer was created successfully, false otherwise\&. 
.RE
.PP

.SS "\fBGeometry\fP * ResourceManager::getGeometry (std::string nameID)"
Retrieves a previously loaded geometry by name\&.
.PP
\fBParameters\fP
.RS 4
\fInameID\fP The name associated with the geometry to retrieve\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A pointer to the geometry object, or nullptr if not found\&. 
.RE
.PP

.SS "\fBIndexBuffer\fP * ResourceManager::getIndexBuffer (std::string nameID)"
Retrieves a previously created index buffer by name\&.
.PP
\fBParameters\fP
.RS 4
\fInameID\fP The name associated with the index buffer to retrieve\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A pointer to the index buffer object, or nullptr if not found\&. 
.RE
.PP

.SS "unsigned ResourceManager::getTexture (const char * name)"
Retrieves a previously loaded texture by name\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP The name associated with the texture to retrieve\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The ID of the texture, or 0 if not found\&. 
.RE
.PP

.SS "\fBVertexBuffer\fP * ResourceManager::getVertexBuffer (std::string nameID)"
Retrieves a previously created vertex buffer by name\&.
.PP
\fBParameters\fP
.RS 4
\fInameID\fP The name associated with the vertex buffer to retrieve\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A pointer to the vertex buffer object, or nullptr if not found\&. 
.RE
.PP

.SS "void ResourceManager::LoadObj (\fBEngine\fP & e, const char * name, const char * path)"
Loads an OBJ geometry file asynchronously\&.
.PP
This function queues a loading task for an OBJ file, associating it with the provided name\&.
.PP
\fBParameters\fP
.RS 4
\fIe\fP Reference to the \fBEngine\fP object\&. 
.br
\fIname\fP The name to associate with the loaded geometry\&. 
.br
\fIpath\fP The path to the OBJ file to load\&. 
.RE
.PP

.SS "void ResourceManager::loadTexture (const char * name, \fBTexture\fP tex, const char * path)"
Loads a texture from a file\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP The name to associate with the loaded texture\&. 
.br
\fItex\fP An existing \fBTexture\fP object to load the texture data into\&. 
.br
\fIpath\fP The path to the texture file to load\&. 
.RE
.PP

.SS "void ResourceManager::WaitResources ()"
Blocks execution until all pending resource loading tasks are finished\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Aguados Engine from the source code\&.
